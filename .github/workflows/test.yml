name: 'Test'
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Docker BuildKit
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Get npm Cache Directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Cache npm Dependencies
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-key: ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm ci
      - name: Cache Docker Layers 
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker Image 
        run: |
          echo ---- docker image build ----
          docker buildx build -t express-app-img . \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new
      - name: Run Docker Container
        run: docker container run -d --rm --name express-app -p 3000:3000 express-app-img
      - name: Test
        run: npm test 
      - name: Move New Docker Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
